{"ast":null,"code":"function login(username1, password1) {\n  var mysql = require('mysql');\n\n  const connectDB = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: '9364',\n    database: 'internshipDB'\n  });\n  connectDB.connect(err => {\n    if (err) throw err;\n    console.log('mysql test connected ');\n  });\n  const username = username1;\n  const password = password1;\n  let sql = 'select * from user where user.username = \"' + username + '\"'; //let sql = 'select * from user'\n\n  const result = connectDB.query(sql, (err, result) => {\n    if (err) {\n      console.log(err);\n      return;\n    } //console.log(result)\n\n  });\n\n  if (result) {\n    if (result.password === password) {\n      return {\n        state: 4000,\n        msg: '登录成功',\n        data: result\n      };\n    } else {\n      return {\n        state: 3000,\n        msg: '密码错误'\n      };\n    }\n  } else {\n    return {\n      state: 3000,\n      msg: '账号不存在，请注册'\n    };\n  }\n}\n\nfunction sign() {\n  var mysql = require('mysql');\n\n  const connectDB = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: '9364',\n    database: 'internshipDB'\n  });\n  connectDB.connect(err => {\n    if (err) throw err;\n    console.log('mysql test connected ');\n  });\n  const username = \"root2\";\n  const password = \"123456\";\n  let sql1 = 'select * from user where user.username = \"' + username + '\"';\n  const result1 = connectDB.query(sql1, (err, result) => {\n    if (err) {\n      console.log(err);\n      return;\n    }\n  }); //console.log('@result1',result1)\n\n  if (!(result1.username === username)) {\n    let sql = 'insert into user (username , password) value (\"' + username + '\",\"' + password + '\")';\n    const result = connectDB.query(sql, (err, result) => {\n      if (err) {\n        console.log(err);\n        return;\n      } //console.log(result)\n\n    });\n\n    if (result) {\n      console.log({\n        state: 4000,\n        msg: '注册成功'\n      });\n      return {\n        state: 4000,\n        msg: '注册成功'\n      };\n    } else {\n      return {\n        state: 3000,\n        msg: '注册失败'\n      };\n    }\n  } else {\n    return {\n      state: 3000,\n      msg: '账号已存在，请更换账号'\n    };\n  }\n} //login ();\n//sign();\n\n\nmodule.exports = [['GET', 'api/login', login], ['POST', 'api/sign', sign]];","map":{"version":3,"names":["login","username1","password1","mysql","require","connectDB","createConnection","host","user","password","database","connect","err","console","log","username","sql","result","query","state","msg","data","sign","sql1","result1","module","exports"],"sources":["C:/Users/ZCJ/Desktop/internshipsysrem/src/server/api/user.js"],"sourcesContent":["\r\n\r\nfunction login (username1 ,password1) {\r\n    var mysql = require('mysql')\r\n\r\n    const connectDB = mysql.createConnection({\r\n        host: 'localhost',\r\n        user: 'root',\r\n        password: '9364',\r\n        database: 'internshipDB'\r\n    })\r\n    connectDB.connect(err => { \r\n        if (err) \r\n        throw err; console.log('mysql test connected ')    \r\n    });\r\n\r\n    const username = username1;\r\n    const password = password1;\r\n    let sql = 'select * from user where user.username = \"' + username + '\"' \r\n    //let sql = 'select * from user'\r\n\r\n    const result = connectDB.query(sql, (err, result) => {\r\n        if(err){\r\n            console.log(err);\r\n            return\r\n        }\r\n        //console.log(result)\r\n    })\r\n\r\n    if(result){\r\n        if(result.password === password){\r\n            return({\r\n                state: 4000,\r\n                msg: '登录成功',\r\n                data: result\r\n            })\r\n        }\r\n        else{\r\n            return({\r\n                state: 3000,\r\n                msg: '密码错误'\r\n            })\r\n        }    \r\n    }\r\n    else{\r\n        return({\r\n            state: 3000,\r\n            msg: '账号不存在，请注册'\r\n        })\r\n    }\r\n}\r\n\r\nfunction sign () {\r\n    var mysql = require('mysql')\r\n\r\n    const connectDB = mysql.createConnection({\r\n        host: 'localhost',\r\n        user: 'root',\r\n        password: '9364',\r\n        database: 'internshipDB'\r\n    })\r\n    connectDB.connect(err => { \r\n        if (err) \r\n        throw err; console.log('mysql test connected ')    \r\n    });\r\n\r\n    const username = \"root2\";\r\n    const password = \"123456\";\r\n\r\n    let sql1 = 'select * from user where user.username = \"' + username + '\"' \r\n    const result1 = connectDB.query(sql1, (err, result) => {\r\n        if(err){\r\n            console.log(err);\r\n            return\r\n        }\r\n    })\r\n    //console.log('@result1',result1)\r\n\r\n    if(!(result1.username === username)){\r\n        let sql = 'insert into user (username , password) value (\"' + username + '\",\"'+ password + '\")'\r\n        const result = connectDB.query(sql, (err, result) => {\r\n            if(err){\r\n                console.log(err);\r\n                return\r\n            }\r\n            //console.log(result)\r\n        })\r\n\r\n        if(result){\r\n            console.log({\r\n                state: 4000,\r\n                msg: '注册成功'\r\n            });\r\n            return({\r\n                state: 4000,\r\n                msg: '注册成功'\r\n            })\r\n        }\r\n        else{\r\n            return({\r\n                state: 3000,\r\n                msg: '注册失败'\r\n            })\r\n        }    \r\n    }\r\n    else{\r\n        return({\r\n            state: 3000,\r\n            msg: '账号已存在，请更换账号'\r\n        })\r\n        \r\n    }\r\n}\r\n\r\n\r\n//login ();\r\n//sign();\r\n\r\nmodule.exports = [\r\n    ['GET', 'api/login', login],\r\n    ['POST', 'api/sign', sign],\r\n]\r\n"],"mappings":"AAEA,SAASA,KAAT,CAAgBC,SAAhB,EAA2BC,SAA3B,EAAsC;EAClC,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;EAEA,MAAMC,SAAS,GAAGF,KAAK,CAACG,gBAAN,CAAuB;IACrCC,IAAI,EAAE,WAD+B;IAErCC,IAAI,EAAE,MAF+B;IAGrCC,QAAQ,EAAE,MAH2B;IAIrCC,QAAQ,EAAE;EAJ2B,CAAvB,CAAlB;EAMAL,SAAS,CAACM,OAAV,CAAkBC,GAAG,IAAI;IACrB,IAAIA,GAAJ,EACA,MAAMA,GAAN;IAAWC,OAAO,CAACC,GAAR,CAAY,uBAAZ;EACd,CAHD;EAKA,MAAMC,QAAQ,GAAGd,SAAjB;EACA,MAAMQ,QAAQ,GAAGP,SAAjB;EACA,IAAIc,GAAG,GAAG,+CAA+CD,QAA/C,GAA0D,GAApE,CAhBkC,CAiBlC;;EAEA,MAAME,MAAM,GAAGZ,SAAS,CAACa,KAAV,CAAgBF,GAAhB,EAAqB,CAACJ,GAAD,EAAMK,MAAN,KAAiB;IACjD,IAAGL,GAAH,EAAO;MACHC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA;IACH,CAJgD,CAKjD;;EACH,CANc,CAAf;;EAQA,IAAGK,MAAH,EAAU;IACN,IAAGA,MAAM,CAACR,QAAP,KAAoBA,QAAvB,EAAgC;MAC5B,OAAO;QACHU,KAAK,EAAE,IADJ;QAEHC,GAAG,EAAE,MAFF;QAGHC,IAAI,EAAEJ;MAHH,CAAP;IAKH,CAND,MAOI;MACA,OAAO;QACHE,KAAK,EAAE,IADJ;QAEHC,GAAG,EAAE;MAFF,CAAP;IAIH;EACJ,CAdD,MAeI;IACA,OAAO;MACHD,KAAK,EAAE,IADJ;MAEHC,GAAG,EAAE;IAFF,CAAP;EAIH;AACJ;;AAED,SAASE,IAAT,GAAiB;EACb,IAAInB,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;EAEA,MAAMC,SAAS,GAAGF,KAAK,CAACG,gBAAN,CAAuB;IACrCC,IAAI,EAAE,WAD+B;IAErCC,IAAI,EAAE,MAF+B;IAGrCC,QAAQ,EAAE,MAH2B;IAIrCC,QAAQ,EAAE;EAJ2B,CAAvB,CAAlB;EAMAL,SAAS,CAACM,OAAV,CAAkBC,GAAG,IAAI;IACrB,IAAIA,GAAJ,EACA,MAAMA,GAAN;IAAWC,OAAO,CAACC,GAAR,CAAY,uBAAZ;EACd,CAHD;EAKA,MAAMC,QAAQ,GAAG,OAAjB;EACA,MAAMN,QAAQ,GAAG,QAAjB;EAEA,IAAIc,IAAI,GAAG,+CAA+CR,QAA/C,GAA0D,GAArE;EACA,MAAMS,OAAO,GAAGnB,SAAS,CAACa,KAAV,CAAgBK,IAAhB,EAAsB,CAACX,GAAD,EAAMK,MAAN,KAAiB;IACnD,IAAGL,GAAH,EAAO;MACHC,OAAO,CAACC,GAAR,CAAYF,GAAZ;MACA;IACH;EACJ,CALe,CAAhB,CAlBa,CAwBb;;EAEA,IAAG,EAAEY,OAAO,CAACT,QAAR,KAAqBA,QAAvB,CAAH,EAAoC;IAChC,IAAIC,GAAG,GAAG,oDAAoDD,QAApD,GAA+D,KAA/D,GAAsEN,QAAtE,GAAiF,IAA3F;IACA,MAAMQ,MAAM,GAAGZ,SAAS,CAACa,KAAV,CAAgBF,GAAhB,EAAqB,CAACJ,GAAD,EAAMK,MAAN,KAAiB;MACjD,IAAGL,GAAH,EAAO;QACHC,OAAO,CAACC,GAAR,CAAYF,GAAZ;QACA;MACH,CAJgD,CAKjD;;IACH,CANc,CAAf;;IAQA,IAAGK,MAAH,EAAU;MACNJ,OAAO,CAACC,GAAR,CAAY;QACRK,KAAK,EAAE,IADC;QAERC,GAAG,EAAE;MAFG,CAAZ;MAIA,OAAO;QACHD,KAAK,EAAE,IADJ;QAEHC,GAAG,EAAE;MAFF,CAAP;IAIH,CATD,MAUI;MACA,OAAO;QACHD,KAAK,EAAE,IADJ;QAEHC,GAAG,EAAE;MAFF,CAAP;IAIH;EACJ,CA1BD,MA2BI;IACA,OAAO;MACHD,KAAK,EAAE,IADJ;MAEHC,GAAG,EAAE;IAFF,CAAP;EAKH;AACJ,C,CAGD;AACA;;;AAEAK,MAAM,CAACC,OAAP,GAAiB,CACb,CAAC,KAAD,EAAQ,WAAR,EAAqB1B,KAArB,CADa,EAEb,CAAC,MAAD,EAAS,UAAT,EAAqBsB,IAArB,CAFa,CAAjB"},"metadata":{},"sourceType":"module"}